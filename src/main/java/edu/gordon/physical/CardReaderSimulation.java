/* * ATM Example system - file CardReader.java * * copyright (c) 2001 - Russell C. Bjork * */ package edu.gordon.physical;import edu.gordon.model.event.CardEvent;import edu.gordon.model.event.EjectCardEvent;import edu.gordon.model.event.ReadCardEvent;import edu.gordon.model.event.RetainCardEvent;import edu.gordon.model.Card;import edu.gordon.utils.EventBusManager;/** Manager for the ATM's card reader.  In a real ATM, this would  *  manage a physical device; in this edu.gordon.simulation, it uses classes  *  in package edu.gordon.simulation to simulate the device.   */ public class CardReaderSimulation implements CardReaderInterface{    // In a real ATM, code would be needed to sense insertion of a card into the    // slot and notify the ATM - simulated in this case by a button in the GUI        /** Read a card that has been partially inserted into the reader     *     *  @return Card object representing information on the card if read     *          successfully, null if not read successfully     */    public Card readCard()    {       //return Simulation.getInstance().readCard();       CardEvent cardEvent = new ReadCardEvent(false);//false       EventBusManager.post(cardEvent);       return cardEvent.card;    }        /** Eject the card that is currently inside the reader.       */    public void ejectCard()    {        EventBusManager.post(new EjectCardEvent(true));    }        /** Retain the card that is currently inside the reader for action by the     *  bank.     */    public void retainCard()    {        EventBusManager.post(new RetainCardEvent(true));    }}